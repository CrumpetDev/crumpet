# Generated by Django 4.1.5 on 2023-03-27 16:45

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Element",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("proxy_name", models.CharField(max_length=20)),
                ("margin_top", models.IntegerField(default=0)),
                ("margin_right", models.IntegerField(default=0)),
                ("margin_bottom", models.IntegerField(default=0)),
                ("margin_left", models.IntegerField(default=0)),
                ("padding_top", models.IntegerField(default=0)),
                ("padding_right", models.IntegerField(default=0)),
                ("padding_bottom", models.IntegerField(default=0)),
                ("padding_left", models.IntegerField(default=0)),
                ("flex", models.IntegerField(default=1)),
                (
                    "main_axis_alignment",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("start", "start"),
                            ("center", "center"),
                            ("end", "end"),
                        ],
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "cross_axis_alignment",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("start", "start"),
                            ("center", "center"),
                            ("end", "end"),
                        ],
                        max_length=50,
                        null=True,
                    ),
                ),
                ("main_axis_size", models.IntegerField(blank=True, null=True)),
                (
                    "spacing",
                    models.CharField(
                        blank=True, choices=[("flex", "flex")], max_length=50, null=True
                    ),
                ),
                ("text", models.TextField(blank=True, null=True)),
                (
                    "font_size",
                    models.PositiveIntegerField(
                        blank=True,
                        default=10,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(10),
                            django.core.validators.MaxValueValidator(128),
                        ],
                    ),
                ),
                ("font_color", models.TextField(blank=True, null=True)),
                (
                    "background_color",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("image_url", models.URLField(blank=True, null=True)),
                (
                    "button_action",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("close", "close"),
                            ("deep_link", "deep_link"),
                            ("external_link", "external_link"),
                            ("next", "next"),
                        ],
                        max_length=15,
                        null=True,
                    ),
                ),
                (
                    "stroke",
                    models.PositiveSmallIntegerField(blank=True, default=0, null=True),
                ),
                (
                    "stroke_color",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "border_radius",
                    models.PositiveSmallIntegerField(blank=True, null=True),
                ),
                ("allow_multi_selection", models.BooleanField(blank=True, null=True)),
                ("min_value", models.IntegerField(blank=True, null=True)),
                ("max_value", models.IntegerField(blank=True, null=True)),
                ("increment", models.PositiveIntegerField(blank=True, null=True)),
                ("label_text", models.TextField(blank=True, null=True)),
                (
                    "slider_color",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Event",
            fields=[
                (
                    "name",
                    models.CharField(max_length=200, primary_key=True, serialize=False),
                ),
                ("description", models.CharField(max_length=400)),
                (
                    "event_type",
                    models.CharField(
                        choices=[
                            ("generic", "Generic Event"),
                            ("button_pressed", "Button Pressed"),
                            ("text_field_value", "Textfield Value"),
                            ("selection_confirmed", "Selection"),
                        ],
                        max_length=50,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Selector",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("text", models.TextField()),
                ("value", models.TextField()),
                (
                    "element",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="selectors",
                        to="app.element",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="element",
            name="event",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="associated_elements",
                to="app.event",
            ),
        ),
        migrations.AddField(
            model_name="element",
            name="parent",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="children",
                to="app.element",
            ),
        ),
        migrations.CreateModel(
            name="ButtonElement",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("app.element",),
        ),
        migrations.CreateModel(
            name="Column",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("app.element",),
        ),
        migrations.CreateModel(
            name="ImageElement",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("app.element",),
        ),
        migrations.CreateModel(
            name="Row",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("app.element",),
        ),
        migrations.CreateModel(
            name="SelectionGroup",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("app.element",),
        ),
        migrations.CreateModel(
            name="Slider",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("app.element",),
        ),
        migrations.CreateModel(
            name="TextElement",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("app.element",),
        ),
        migrations.CreateModel(
            name="TextField",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("app.element",),
        ),
    ]
