openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /user/:
    get:
      operationId: listUserDetails
      description: Return the user details.
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - user
    delete:
      operationId: destroyUserDetail
      description: Delete the current user.
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - user
  /projects/:
    get:
      operationId: listProjects
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
          description: ''
      tags:
      - projects
    post:
      operationId: createProject
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Project'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Project'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
      tags:
      - projects
  /projects/{id}/:
    get:
      operationId: retrieveProject
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this project.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
      tags:
      - projects
    put:
      operationId: updateProject
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this project.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Project'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Project'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
      tags:
      - projects
    patch:
      operationId: partialUpdateProject
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this project.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Project'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Project'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
      tags:
      - projects
    delete:
      operationId: destroyProject
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this project.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - projects
  /projects/{id}/people/{environment_identifier}/:
    get:
      operationId: peopleInEnvironmentProject
      description: Retrieve all people that belong to the specified project and environment.
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this project.
        schema:
          type: string
      - name: environment_identifier
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
      tags:
      - projects
  /environments/:
    get:
      operationId: listEnvironments
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Environment'
          description: ''
      tags:
      - environments
    post:
      operationId: createEnvironment
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Environment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Environment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Environment'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Environment'
          description: ''
      tags:
      - environments
  /environments/{id}/:
    get:
      operationId: retrieveEnvironment
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this environment.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Environment'
          description: ''
      tags:
      - environments
    put:
      operationId: updateEnvironment
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this environment.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Environment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Environment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Environment'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Environment'
          description: ''
      tags:
      - environments
    patch:
      operationId: partialUpdateEnvironment
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this environment.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Environment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Environment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Environment'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Environment'
          description: ''
      tags:
      - environments
    delete:
      operationId: destroyEnvironment
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this environment.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - environments
  /token/:
    post:
      operationId: createTokenObtainPair
      description: 'Takes a set of user credentials and returns an access and refresh
        JSON web

        token pair to prove the authentication of those credentials.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
      tags:
      - token
  /token/refresh/:
    post:
      operationId: createTokenRefresh
      description: 'Takes a refresh type JSON web token and returns an access type
        JSON web

        token if the refresh token is valid.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
      tags:
      - token
  /token/verify/:
    post:
      operationId: createTokenVerify
      description: 'Takes a token and indicates if it is valid.  This view provides
        no

        information about a token''s fitness for a particular use.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenVerify'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenVerify'
          description: ''
      tags:
      - token
  /register/:
    post:
      operationId: createUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Register'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Register'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Register'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Register'
          description: ''
      tags:
      - register
components:
  schemas:
    Project:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        api_key:
          type: string
          maxLength: 256
        members:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                readOnly: true
              user:
                type: object
                properties:
                  id:
                    type: integer
                    readOnly: true
                  first_name:
                    type: string
                    maxLength: 150
                  last_name:
                    type: string
                    maxLength: 150
                  email:
                    type: string
                    format: email
                    maxLength: 254
                required:
                - email
              type:
                enum:
                - ADM
                - MEM
                type: string
            required:
            - user
          readOnly: true
        environments:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                readOnly: true
              name:
                type: string
                maxLength: 100
              identifier:
                type: string
                maxLength: 255
              is_default:
                type: boolean
            required:
            - name
            - identifier
            - is_default
          readOnly: true
      required:
      - name
    Environment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        identifier:
          type: string
          maxLength: 255
        is_default:
          type: boolean
        data_schema:
          type: object
          nullable: true
      required:
      - name
      - identifier
      - is_default
      - data_schema
    TokenObtainPair:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
          writeOnly: true
      required:
      - email
      - password
    TokenRefresh:
      type: object
      properties:
        refresh:
          type: string
        access:
          type: string
          readOnly: true
      required:
      - refresh
    TokenVerify:
      type: object
      properties:
        token:
          type: string
      required:
      - token
    Register:
      type: object
      properties:
        password:
          type: string
          writeOnly: true
        email:
          type: string
          format: email
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
      required:
      - password
      - email
